PRU Assembler PC v2.1.0 Mon Apr 06 14:40:15 2015

Tools Copyright (c) 2012-2014 Texas Instruments Incorporated
../pru_adc_sampling.asm                                              PAGE    1

       1;******************************************************************************
       2;+--------------------------------------------------------------------------+**
       3;|                            ****                                          |**
       4;|                            ****                                          |**
       5;|                            ******o***                                    |**
       6;|                      ********_;/_****                                   |**
       7;|                      ***** /_;_/ ****                                   |**
       8;|                       ** ** (__/ ****                                    |**
       9;|                           *********                                      |**
      10;|                            ****                                          |**
      11;|                            ***                                           |**
      12;|                                                                          |**
      13;|         Copyright (c) 1998-2015 Texas Instruments Incorporated           |**
      14;|                        ALL RIGHTS RESERVED                               |**
      15;|                                                                          |**
      16;| Permission is hereby granted to licensees of Texas Instruments           |**
      17;| Incorporated (TI) products to use this computer program for the sole     |**
      18;| purpose of implementing a licensee product based on TI products.         |**
      19;| No other rights to reproduce, use, or disseminate this computer          |**
      20;| program, whether in part or in whole, are granted.                       |**
      21;|                                                                          |**
      22;| TI makes no representation or warranties with respect to the             |**
      23;| performance of this computer program, and specifically disclaims         |**
      24;| any responsibility for any damages, special or consequential,            |**
      25;| connected with the use of this program.                                  |**
      26;|                                                                          |**
      27;+--------------------------------------------------------------------------+**
      28;*****************************************************************************/
      29; file:   pru_adc_sampling.p
      30;
      31; brief:    Service PWM event, ADC sampling, EnDat scheduling using IEP timer
      32;           IEP CMP0, CMP1, CMP2 are used respectively for PWM period, ADC SOC
      33;          and ENDAT trigger
      34;  (C) Copyright 2014-2015, Texas Instruments, Inc
      35;
      36
      37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;/
      38; Defines Section
      39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;/
      40
      41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;/
      42; Includes Section
      43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;/
      44        .include "pru_adc_sampling.hp"
      45        .include "icss_intc_regs.hp"
      46        .include "icss_iep_regs.hp"
      47        .include "icss_event_defs.hp"
      48        .include "icss_regs.hp"
      49        .include "pru_adc_sampling_macros.hp"
      50
      51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;/
      52; Assembler Directives Section
      53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;/
      54 00000000                         .sect   ".text"
      55        .retain         ; Required for building .out with assembly file
PRU Assembler PC v2.1.0 Mon Apr 06 14:40:15 2015

Tools Copyright (c) 2012-2014 Texas Instruments Incorporated
../pru_adc_sampling.asm                                              PAGE    2

      56        .retainrefs ; Required for building .out with assembly file
      57        .global MAIN
      58 00000000                 MAIN:
      59 00000000 0000002EFFBD80          ZERO    &R0, 124
      60
      61 00000004                 FOC_IDLE:
      62        ; Wait till host is ready, Indicate via  FOC_CONTROL_OFFSET
      63 00000004 0000009150180E          LBCO    &TEMP_REG_1.b0, c_ICSS_PRU1_LOCAL_DATA, FOC_CONTROL_OFFSET,     1
      64 00000008 0000006F010EFF          QBNE    FOC_IDLE, TEMP_REG_1.b0,        FOC_CONTROL_ENABLE
      65 0000000c                 START_FOC:
      66        ; Initialize ADC control register and FIFO address pointers
      67 0000000c C0009B244834DB          LDI32   R_TSC_ADC_BASE, TSC_ADC_BASE
         00000013 00000000004024 
      68 00000014 C1009C244834DC          LDI32   R_TSC_ADC_FIFO0DATA_BASE,       TSC_ADC_FIFO0DATA_BASE
         0000001b 00000000004024 
      69
      70        ;Setup PWM period, ADC and EnDat trigger times
      71 0000001c                         CALL    FN_SET_IEP_CMP_VALUES
1        0000001c 000000230000DD!         JAL     R29.w2, FN_SET_IEP_CMP_VALUES
      72
      73        ;Clear all events from PRU_ICSS_INTC, ADC, PWM for init
      74 00000020                         CALL    FN_INIT_ALL
1        00000020 000000230000DD!         JAL     R29.w2, FN_INIT_ALL
      75 00000024                         CALL    FN_ADC_CLEAR_ALL_PENDING_EVENTS
1        00000024 000000230000DD!         JAL     R29.w2, FN_ADC_CLEAR_ALL_PENDING_EVENTS
      76
      77        ; Synchronize IEP and PWM counters
      78 00000028                         CALL    FN_SYNC_IEP_PWM
1        00000028 000000230000DD!         JAL     R29.w2, FN_SYNC_IEP_PWM
      79
      80 0000002c                 CONTROL_LOOP:
      81 0000002c 000000C91FFF00          QBBC    CONTROL_LOOP,   R31,    31
      82 00000030                 EVENT_HANDLER_RESTART:
      83        ; Load highest priority currently pending interrupt for host interrupt 1
      84 00000030 0000002409048F          LDI             TEMP_REG_2.w0,  ICSS_INTC_HIPIR1
      85 00000034 000000908F208E          LBCO    &TEMP_REG_1,    c_ICSS_INTC,    TEMP_REG_2.w0,  4
      86 00000038 000000D71FEEFD          QBBS    CONTROL_LOOP,   TEMP_REG_1,     NONE_HINT_BIT ; Wait till pending interrupt
      87        ; Clear host event
      88 0000003c 0000008124208E          SBCO    &TEMP_REG_1,    c_ICSS_INTC,    ICSS_INTC_SICR, 4
      89
      90 00000040 0000005107EE05          QBEQ    EVH_IEP_EVENT_PEND,     TEMP_REG_1,     SYS_EVT_IEP_TIM_CAP_CMP_PEND ; Branch to CMP_H
      91        .if $isdefed ("MAG_ADC_ENABLE")=0
      92        QBEQ    EVH_ADC_EVENT_PEND,     TEMP_REG_1,     SYS_EVT_TSC_ADC_PEND ; Branch to ADC0 EOC hand
      93        .else
      94 00000044 0000005122EE0C          QBEQ    EVH_ADC_EVENT_PEND,     TEMP_REG_1,     SYS_EVT_MAG_ADC_PEND ; Branch to ADC1 EOC hand
      95        .endif
      96 00000048 000000512BEE17          QBEQ    EVH_PWM_EVENT_PEND,     TEMP_REG_1,     SYS_EVT_PWM3_PEND ; Branch to PWM SOC event ha
      97 0000004c 0000005113EE12          QBEQ    EVH_PRU0_EVENT_PEND,    TEMP_REG_1,     TRIGGER_ENDAT_COMPLETE_EVENT ; Branch to EnDat
      98        ; Unregistered event
      99 00000050 0000002A000000          HALT
     100
     101;************************
     102; IEP event handler
     103;************************
     104 00000054                 EVH_IEP_EVENT_PEND:
PRU Assembler PC v2.1.0 Mon Apr 06 14:40:15 2015

Tools Copyright (c) 2012-2014 Texas Instruments Incorporated
../pru_adc_sampling.asm                                              PAGE    3

     105        ;Get pending events from IEP
     106 00000054 00000091443A8E          LBCO    &TEMP_REG_1,    c_IEP,  ICSS_IEP_CMP_STATUS_REG,        4
     107        ;Clear pending events in IEP
     108 00000058 00000081443A8E          SBCO    &TEMP_REG_1,    c_IEP,  ICSS_IEP_CMP_STATUS_REG,        4
     109 0000005c 000000C900EE01          QBBC    EVH_IEP_CHECK_ADC_TRIGGER, TEMP_REG_1,  0
     110 00000060                 EVH_IEP_CHECK_ADC_TRIGGER: ;CMP1
     111 00000060 000000C901EE02          QBBC    EVH_IEP_CHECK_PRU0_TRIGGER,     TEMP_REG_1,     1
     112        ; trigger ADC_SOC
     113 00000064 0000002400219F          LDI             R31.w0, TRIGGER_ADC_CONVERTION_IRQ
     114
     115 00000068                 EVH_IEP_CHECK_PRU0_TRIGGER: ; CMP2
     116 00000068 000000C902EE02          QBBC    EVH_IEP_DONE,   TEMP_REG_1,     2
     117        ; trigger EnDAT
     118 0000006c 0000002400209F          LDI             R31.w0, TRIGGER_ENDAT_CONVERTION_IRQ
     119
     120 00000070                 EVH_IEP_DONE:
     121 00000070 00000021000000!         JMP             EVENT_HANDLER_RESTART
     122
     123;***********************
     124; ADC EOC event handler
     125;***********************
     126 00000074                 EVH_ADC_EVENT_PEND:
     127        ; Accumulate samples and place into PRU memory
     128 00000074 0000002400010E          LDI             TEMP_REG_1.b0, FIFO_WORDS
     129 00000078                         CALL    FN_READ_ADC
1        00000078 000000230000DD!         JAL     R29.w2, FN_READ_ADC
     130 0000007c                         CALL    FN_PROCESS_ADC
1        0000007c 000000230000DD!         JAL     R29.w2, FN_PROCESS_ADC
     131        ; Clear pending events
     132 00000080                         CALL    FN_ADC_CLEAR_ALL_PENDING_EVENTS
1        00000080 000000230000DD!         JAL     R29.w2, FN_ADC_CLEAR_ALL_PENDING_EVENTS
     133
     134        ; If required, send FOC event to ARM
     135 00000084 0000009154180E          LBCO    &TEMP_REG_1.b0, c_ICSS_PRU1_LOCAL_DATA, FOC_TRIGGER_OFFSET,     1
     136 00000088 00000069000E02          QBNE    EVH_ADC_DONE,   TEMP_REG_1.b0,  FOC_TRIGGER_IS_ADC
     137        ;TODO: For optimization either poll for this event from ARM side instead of going through GIC
     138        ;TODO: Secondly if we use GIC, trigger this early so that min IRQ latency is utilized for copy
     139        ;to shared memory etc. starting from EVH_ADC_EVENT_PEND
     140 0000008c 0000002400229F          LDI             R31.w0, TRIGGER_ARM_FOC_IRQ
     141
     142 00000090                 EVH_ADC_DONE:
     143 00000090 00000021000000!         JMP             EVENT_HANDLER_RESTART
     144
     145
     146;************************************
     147; PRU0 EnDAT complete event handler
     148;************************************
     149 00000094                 EVH_PRU0_EVENT_PEND:
     150        ; Event has been cleared by event handler
     151        ; If required, send FOC event to ARM
     152 00000094 0000009154180E          LBCO    &TEMP_REG_1.b0, c_ICSS_PRU1_LOCAL_DATA, FOC_TRIGGER_OFFSET,     1
     153 00000098 00000069010E02          QBNE    EVH_PRU0_DONE,  TEMP_REG_1.b0,  FOC_TRIGGER_IS_ENDAT
     154 0000009c 0000002400229F          LDI             R31.w0, TRIGGER_ARM_FOC_IRQ
     155 000000a0                 EVH_PRU0_DONE:
     156 000000a0 00000021000000!         JMP             EVENT_HANDLER_RESTART
PRU Assembler PC v2.1.0 Mon Apr 06 14:40:15 2015

Tools Copyright (c) 2012-2014 Texas Instruments Incorporated
../pru_adc_sampling.asm                                              PAGE    4

     157
     158 000000a4                 EVH_PWM_EVENT_PEND:
     159 000000a4 62008F244830CF          LDI32   TEMP_REG_2,     PWM3_BASE
         000000ab 00000000004024 
     160 000000ac 000000240001EE          LDI             TEMP_REG_1,     0x01
     161 000000b0 000000E1382F8E          SBBO    &TEMP_REG_1,    TEMP_REG_2,     PWM_ETCLR,      4
     162 000000b4 00000021000000!         JMP             EVH_PWM_DONE
     163
     164        ; Store PWM count and IEP count in memory for comparison
     165        ;Not used now
     166 000000b8 000000F1080F90          LBBO    &TEMP_REG_3,    TEMP_REG_2,     8,      2
     167 000000bc 000000910C3A91          LBCO    &TEMP_REG_4,    c_IEP, ICSS_IEP_COUNT_REG,      4
     168 000000c0 000000809A7890          SBCO    &TEMP_REG_3,    c_ICSS_PRU1_LOCAL_DATA, SAMPLE_CNTR,    8
     169 000000c4 00000001089A9A          ADD             SAMPLE_CNTR,    SAMPLE_CNTR,    8
     170 000000c8 00000069F89A03          QBNE    EVH_PWM_DONE,   SAMPLE_CNTR,    248
     171 000000cc 0000002400009A          LDI             SAMPLE_CNTR,    0
     172 000000d0 0000002A000000          HALT
     173
     174 000000d4                 EVH_PWM_DONE:
     175 000000d4 00000021000000!         JMP             EVENT_HANDLER_RESTART
     176
     177;****************************************************************************
     178;
     179;     NAME          : FN_READ_ADC
     180;     DESCRIPTION   : Read out a given number of samples from the ADC FIFO.
     181;
     182;     RETURNS       : TEMP_REG_1.b1: actual ADC FIFO level
     183;                     TEMP_REG_2..TEMP_REG_n: ADC values
     184;     ARGS          : TEMP_REG_1.b0: desired FIFO level
     185;     USES      : NA
     186;     INVOKES       : NA
     187;
     188;****************************************************************************
     189        .global FN_READ_ADC
     190FN_READ_ADC:    .asmfunc
     191        ; Load FIFO count
     192 000000d8 000000F1E41B2E          LBBO    &TEMP_REG_1.b1, R_TSC_ADC_BASE, TSC_ADC_FIFO0COUNT,     1
     193 000000dc 000000502E0E07          QBEQ    READ_ADC_FIFO,  TEMP_REG_1.b0,  TEMP_REG_1.b1
     194        ; expected FIFO count does not match with current FIFO count. Reset FIFO
     195 000000e0 000000F1403B81          LBBO    &R1,    R_TSC_ADC_BASE, TSC_ADC_CONTROL,        4
     196 000000e4 0000001D00E1E1          CLR             R1,     R1.t0
     197 000000e8 000000E1403B81          SBBO    &R1,    R_TSC_ADC_BASE, TSC_ADC_CONTROL,        4
     198 000000ec 0000001F00E1E1          SET             R1,     R1.t0
     199 000000f0 000000E1403B81          SBBO    &R1,    R_TSC_ADC_BASE, TSC_ADC_CONTROL,        4
     200 000000f4 00000021000000!         JMP             READ_ADC_FIFO_DONE
     201
     202 000000f8                 READ_ADC_FIFO:
     203        ; Load FIFO content
     204        ;MOV        R0.b0, TEMP_REG_1.b0
     205 000000f8 00000009020E20          LSL             R0.b1,  TEMP_REG_1.b0,  2
     206 000000fc 000000FF00DC82          LBBO    &ADC_TEMP_REG_1,        R_TSC_ADC_FIFO0DATA_BASE,       0,      b1
     207 00000100                 READ_ADC_FIFO_DONE:
     208 00000100                         RET
1        00000100 00000020DD0000          JMP     R29.w2                  
     209        .endasmfunc
PRU Assembler PC v2.1.0 Mon Apr 06 14:40:15 2015

Tools Copyright (c) 2012-2014 Texas Instruments Incorporated
../pru_adc_sampling.asm                                              PAGE    5

     210
     211;****************************************************************************
     212;
     213;     NAME          : FN_ADC_CLEAR_ALL_PENDING_EVENTS
     214;     DESCRIPTION   : Clears FIFO threshold level event
     215;                     Clear all pending events in INTC
     216;
     217;     RETURNS       : TEMP_REG_1.b1: actual ADC FIFO level
     218;                     TEMP_REG_2..TEMP_REG_n: ADC values
     219;     ARGS          : TEMP_REG_1.b0: desired FIFO level
     220;     USES      : NA
     221;     INVOKES       : NA
     222;
     223;****************************************************************************
     224        .global FN_ADC_CLEAR_ALL_PENDING_EVENTS
     225FN_ADC_CLEAR_ALL_PENDING_EVENTS:    .asmfunc
     226        ; Clear FIFO threshold interrupt in ADC
     227 00000104 000000240004EF          LDI             TEMP_REG_2,     (1<<2)
     228 00000108 000000E1283B8F          SBBO    &TEMP_REG_2,    R_TSC_ADC_BASE, TSC_ADC_IRQSTATUS,      4
     229
     230        ; Clear IEP, PRU and PWM event
     231 0000010c 62008F244830CF          LDI32   TEMP_REG_2,     PWM3_BASE
         00000113 00000000004024 
     232 00000114 000000240001EE          LDI             TEMP_REG_1,     0x01
     233 00000118 000000E1382F8E          SBBO    &TEMP_REG_1,    TEMP_REG_2,     PWM_ETCLR,      4
     234
     235
     236        ; Clear host_5 event in ICSS0/INTC (PRU/IEP/PWM)
     237 0000011c 00000024091C8E          LDI             TEMP_REG_1.w0,  ICSS_INTC_HIPIR7 ; host5
     238 00000120 000000908E208E          LBCO    &TEMP_REG_1,    c_ICSS_INTC,    TEMP_REG_1.w0,  4
     239 00000124 0000008124208E          SBCO    &TEMP_REG_1,    c_ICSS_INTC,    ICSS_INTC_SICR, 4
     240
     241        ; Clear pru_1 event in ICSS0/INTC (ADC)
     242 00000128 0000002409048E          LDI             TEMP_REG_1.w0,  ICSS_INTC_HIPIR1 ; pru1
     243 0000012c 000000908E208E          LBCO    &TEMP_REG_1,    c_ICSS_INTC,    TEMP_REG_1.w0,  4
     244 00000130 0000008124208E          SBCO    &TEMP_REG_1,    c_ICSS_INTC,    ICSS_INTC_SICR, 4
     245
     246        ; Clear host_0 event in ICSS1/INTC (PRU IPC event)
     247 00000134 0000002409088E          LDI             TEMP_REG_1.w0,  ICSS_INTC_HIPIR2 ; host0
     248 00000138 00008F240006CF          LDI32   TEMP_REG_2,     ICSS_INTC_BASE + ICSS_TO_ICSS_OFFSET
         0000013f 00000000004024 
     249 00000140 000000F08E2F90          LBBO    &TEMP_REG_3,    TEMP_REG_2,     TEMP_REG_1.w0,  4
     250 00000144 000000E1242F90          SBBO    &TEMP_REG_3,    TEMP_REG_2,     ICSS_INTC_SICR, 4
     251 00000148                         RET
1        00000148 00000020DD0000          JMP     R29.w2                  
     252        .endasmfunc
     253
     254;****************************************************************************
     255;
     256;     NAME          : FN_PROCESS_ADC
     257;     DESCRIPTION   : Pack and Store ADC samples to PRU_ICSS shared memory
     258;
     259;     RETURNS       : TEMP_REG_1.b1: actual ADC FIFO level
     260;                     TEMP_REG_2..TEMP_REG_n: ADC values
     261;     ARGS          : TEMP_REG_1.b0: desired FIFO level
PRU Assembler PC v2.1.0 Mon Apr 06 14:40:15 2015

Tools Copyright (c) 2012-2014 Texas Instruments Incorporated
../pru_adc_sampling.asm                                              PAGE    6

     262;     USES      : NA
     263;     INVOKES       : NA
     264;
     265;****************************************************************************
     266        .global FN_PROCESS_ADC
     267FN_PROCESS_ADC: .asmfunc
     268        ; Map number of FIFO entries into register entries
     269        .if $isdefed("ADC_SIMULTANEOUS_SAMPLING")=0
     270        ; Pack to 16-bit samples
     271        MOV             ADC_TEMP_REG_1.w2,      ADC_TEMP_REG_2.w0
     272        MOV             ADC_TEMP_REG_2.w0,      ADC_TEMP_REG_3.w0
     273        MOV             ADC_TEMP_REG_2.w2,      ADC_TEMP_REG_4.w0
     274        LSL             R0.b1,  TEMP_REG_1.b0,  1
     275        .else
     276 0000014c 00000009020E20          LSL             R0.b1,  TEMP_REG_1.b0,  2
     277        .endif
     278 00000150 0000008F10D882          SBCO    &ADC_TEMP_REG_1,        c_ICSS_PRU1_LOCAL_DATA, ADC_DATA_MEM_OFFSET,    b1
     279 00000154                 PROCESS_ADC_DONE:
     280 00000154                         RET
1        00000154 00000020DD0000          JMP     R29.w2                  
     281        .endasmfunc
     282
     283;****************************************************************************
     284;
     285;     NAME          : FN_INIT_ALL
     286;     DESCRIPTION   : ReInitialize ADC
     287;
     288;
     289;     RETURNS       : NA
     290;
     291;     ARGS          : NA
     292;     USES          : R1, TEMP_REG_1,   TEMP_REG_2, TEMP_REG_3
     293;     INVOKES       : NA
     294;
     295;****************************************************************************
     296        .global FN_INIT_ALL
     297FN_INIT_ALL:    .asmfunc
     298        ; Clear any pending events in ADC by re-enabling
     299 00000158 000000F1403B81          LBBO    &R1,    R_TSC_ADC_BASE, TSC_ADC_CONTROL,        4
     300 0000015c 0000001D00E1E1          CLR             R1,     R1.t0
     301 00000160 000000E1403B81          SBBO    &R1,    R_TSC_ADC_BASE, TSC_ADC_CONTROL,        4
     302 00000164 0000001F00E1E1          SET             R1,     R1.t0
     303 00000168 000000E1403B81          SBBO    &R1,    R_TSC_ADC_BASE, TSC_ADC_CONTROL,        4
     304 0000016c                         RET
1        0000016c 00000020DD0000          JMP     R29.w2                  
     305        .endasmfunc
     306
     307;************************************************************************************
     308;
     309;     NAME          : FN_SYNC_IEP_PWM
     310;     DESCRIPTION   : Synchronize IEP and PWM (only PWM3/4/5 now)
     311;
     312;
     313;     RETURNS       : NA
     314;
PRU Assembler PC v2.1.0 Mon Apr 06 14:40:15 2015

Tools Copyright (c) 2012-2014 Texas Instruments Incorporated
../pru_adc_sampling.asm                                              PAGE    7

     315;     ARGS          : NA
     316;     USES          : TEMP_REG_1, TEMP_REG_2, TEMP_REG_3, TEMP_REG_4, TEMP_REG_5,
     317;                     TEMP_REG_6
     318;     INVOKES       : NA
     319;
     320;*************************************************************************************
     321        .global FN_SYNC_IEP_PWM
     322FN_SYNC_IEP_PWM:        .asmfunc
     323        ; Stop IEP
     324 00000170 00000091003A8E          LBCO    &TEMP_REG_1,    c_IEP, ICSS_IEP_GLOBAL_CFG_REG, 4
     325 00000174 0000001D00EEEE          CLR             TEMP_REG_1,     TEMP_REG_1.t0
     326 00000178 00000081003A8E          SBCO    &TEMP_REG_1,    c_IEP, ICSS_IEP_GLOBAL_CFG_REG, 4
     327        ; Prepare GLOBAL_CFG to get started again
     328 0000017c 0000001F00EEEE          SET             TEMP_REG_1,     TEMP_REG_1.t0
     329        ; Set IEP count to 1/2 PWM period
     330        ;//Read the starting IEP counter (prepared by host) from shared memory
     331 00000180 0000009164388F          LBCO    &TEMP_REG_2,    c_ICSS_PRU1_LOCAL_DATA, FOC_IEP_PWM_SYNC_OFFSET,        4
     332 00000184 000000810C3A8F          SBCO    &TEMP_REG_2,    c_IEP,  ICSS_IEP_COUNT_REG,     4
     333        ; Stop PWM3/4/5
     334 00000188 620090244830D0          LDI32   TEMP_REG_3,     PWM3_BASE
         0000018f 00000000004024 
     335 00000190 820091244830D1          LDI32   TEMP_REG_4,     PWM4_BASE
         00000197 00000000004024 
     336 00000198 A20092244830D2          LDI32   TEMP_REG_5,     PWM5_BASE
         0000019f 00000000004024 
     337 000001a0 000000F1001093          LBBO    &TEMP_REG_6.w0, TEMP_REG_3,     0,      2
     338 000001a4 0000001D019393          CLR             TEMP_REG_6.w0,  TEMP_REG_6.w0.t1
     339 000001a8 000000E1001093          SBBO    &TEMP_REG_6.w0, TEMP_REG_3,     0,      2
     340 000001ac 000000E1001193          SBBO    &TEMP_REG_6.w0, TEMP_REG_4,     0,      2
     341 000001b0 000000E1001293          SBBO    &TEMP_REG_6.w0, TEMP_REG_5,     0,      2
     342        ; Set TCNT register to 0
     343 000001b4 0000002EFF818F          ZERO    &TEMP_REG_2,    4
     344 000001b8 000000E108108F          SBBO    &TEMP_REG_2.w0, TEMP_REG_3,     0x08,   2
     345 000001bc 000000E108118F          SBBO    &TEMP_REG_2.w0, TEMP_REG_4,     0x08,   2
     346 000001c0 000000E108128F          SBBO    &TEMP_REG_2.w0, TEMP_REG_5,     0x08,   2
     347        ; Start PWM3/4/5
     348 000001c4 0000001F019393          SET             TEMP_REG_6.w0,  TEMP_REG_6.w0.t1
     349 000001c8 000000E1001093          SBBO    &TEMP_REG_6.w0, TEMP_REG_3,     0,      2
     350 000001cc 000000E1001193          SBBO    &TEMP_REG_6.w0, TEMP_REG_4,     0,      2
     351 000001d0 000000E1001293          SBBO    &TEMP_REG_6.w0, TEMP_REG_5,     0,      2
     352        ; Start IEP
     353 000001d4 00000081003A8E          SBCO    &TEMP_REG_1,    c_IEP,  ICSS_IEP_GLOBAL_CFG_REG,        4
     354 000001d8                         RET
1        000001d8 00000020DD0000          JMP     R29.w2                  
     355        .endasmfunc
     356
     357
     358;****************************************************************************
     359;
     360;     NAME          : FN_SET_IEP_CMP_VALUES
     361;     DESCRIPTION   : Program the IEP comparators to track PWM period, ADC SOC
     362;                    trigger point and EnDat SOC trigger point, host provides
     363;                    them via shared memory interface
     364;
     365;     RETURNS       :
PRU Assembler PC v2.1.0 Mon Apr 06 14:40:15 2015

Tools Copyright (c) 2012-2014 Texas Instruments Incorporated
../pru_adc_sampling.asm                                              PAGE    8

     366;
     367;     ARGS          : NA
     368;     USES          : TEMP_REG_1, TEMP_REG_2
     369;     INVOKES       : NA
     370;
     371;****************************************************************************
     372        .global FN_SET_IEP_CMP_VALUES
     373FN_SET_IEP_CMP_VALUES:  .asmfunc
     374        ; CMP0 PWM period
     375 000001dc 0000009158388E          LBCO    &TEMP_REG_1,    c_ICSS_PRU1_LOCAL_DATA, FOC_IEP_PWM_PERIOD_OFFSET,      4
     376 000001e0 0000000505EEEE          SUB             TEMP_REG_1,     TEMP_REG_1,     5
     377 000001e4 00000081483A8E          SBCO    &TEMP_REG_1,    c_IEP,  ICSS_IEP_CMP0_REG,      4
     378        ; CMP1 ADC
     379 000001e8 000000915C388E          LBCO    &TEMP_REG_1,    c_ICSS_PRU1_LOCAL_DATA, FOC_IEP_ADC_SOC_TRIGGER_OFFSET, 4
     380 000001ec 000000814C3A8E          SBCO    &TEMP_REG_1,    c_IEP,  ICSS_IEP_CMP1_REG,      4
     381        ; CMP2 EnDat
     382 000001f0 0000009160388E          LBCO    &TEMP_REG_1,    c_ICSS_PRU1_LOCAL_DATA, FOC_IEP_ENDAT_SOC_TRIGGER_OFFSET,       4
     383 000001f4 00000081503A8E          SBCO    &TEMP_REG_1,    c_IEP,  ICSS_IEP_CMP2_REG,      4
     384
     385 000001f8 00000024000FEF          LDI             TEMP_REG_2, 0xF ; Enable reset of IEP counter on CMP0 hit and CMP0 to CMP2
     386 000001fc 00000081403A8F          SBCO    &TEMP_REG_2, c_IEP, ICSS_IEP_CMP_CFG_REG, 4
     387 00000200                         RET
1        00000200 00000020DD0000          JMP     R29.w2                  
     388        .endasmfunc

No Assembly Errors, No Assembly Warnings
