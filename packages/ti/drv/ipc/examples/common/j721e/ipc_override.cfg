
/* =============================================================================
 *   Copyright (c) Texas Instruments Incorporated 2018
 *   All Rights Reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
var SysMin = xdc.module('xdc.runtime.SysMin');
var System = xdc.module('xdc.runtime.System');
var coreId = java.lang.System.getenv("CORE");

if(1) //(coreId == "mpu1_0")
{
    SysMin.bufSize = 0x80000;
}
else
{
    var SysStd = xdc.useModule('xdc.runtime.SysStd');
    System.SupportProxy = SysStd;
}


if(coreId=="mcu1_0" || coreId=="mcu1_1" || coreId=="mcu2_0" || coreId=="mcu2_1" || coreId=="mcu3_0" || coreId=="mcu3_1" )
{
    /* Idle function */
    var Idle = xdc.useModule ('ti.sysbios.knl.Idle');
    Idle.addFunc('&sysIdleLoop');

}
if(coreId=="c7x_1" || coreId=="c66xdsp_1" || coreId =="c66xdsp_2")
{
    /* Idle function */
    var Idle = xdc.useModule ('ti.sysbios.knl.Idle');
    Idle.addFunc('&sysIdleLoop');

    var Task = xdc.useModule('ti.sysbios.knl.Task');
    Task.enableIdleTask = true;
}

/* Set ipc/VRing buffer as uncached */
if(coreId=="c66xdsp_1" || coreId =="c66xdsp_2" )
{
    var Cache = xdc.useModule('ti.sysbios.family.c66.Cache');
    Cache.setMarMeta(0xAA000000, 0x1C00000, Cache.Mar_DISABLE);
}

if(coreId=="mpu1_0")
{
    var Mmu = xdc.module('ti.sysbios.family.arm.v8a.Mmu');
    Mmu.initFunc = "&InitMmu";
}

if(coreId=="c7x_1")
{
    var Mmu = xdc.module('ti.sysbios.family.c7x.Mmu');
    Mmu.initFunc = "&InitMmu";
}
