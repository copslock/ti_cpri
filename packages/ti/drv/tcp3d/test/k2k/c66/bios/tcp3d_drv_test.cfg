/*
 * ======== tcp3d_drv_test.cfg ========
 */

/* IPC packages */
var ListMP = xdc.useModule('ti.sdo.ipc.ListMP');
var GateMP = xdc.useModule('ti.sdo.ipc.GateMP');
var SharedRegion = xdc.useModule('ti.sdo.ipc.SharedRegion');
var HeapMemMP = xdc.useModule('ti.sdo.ipc.heaps.HeapMemMP');
var MultiProc = xdc.useModule('ti.sdo.utils.MultiProc');
var Ipc         = xdc.useModule('ti.sdo.ipc.Ipc');

/*
 * Configure System to use SysMin
 */
System = xdc.useModule('xdc.runtime.System');
SysStd  = xdc.useModule('xdc.runtime.SysStd');
System.SupportProxy = xdc.useModule('xdc.runtime.SysMin')
System.SupportProxy = SysStd;
System.extendedFormats = "%$S%f";

/* Set the system stack - 0x2000 */
Program.stack = 0x4000;

/*
 * Pull in BIOS modules
 */
xdc.useModule('ti.sysbios.BIOS');
xdc.useModule('ti.sysbios.hal.Timer');
xdc.useModule('ti.sysbios.knl.Semaphore');
xdc.useModule('ti.sysbios.knl.Swi');
xdc.useModule('ti.sysbios.knl.Task');
xdc.useModule('ti.sysbios.hal.Cache');
xdc.useModule('xdc.runtime.Log');
xdc.useModule('xdc.runtime.Error');

/*
 * Memory related modules and then allocate as needed
 */
var Memory = xdc.useModule('xdc.runtime.Memory');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');

/* Use HeapMem for default heap manager and give it 49152 (0xC000)
 * bytes to work with.
 */
Program.sectMap["systemHeap"] = Program.platform.dataMemory;
var heapMemParams = new HeapMem.Params;
heapMemParams.size = 0x18000;
heapMemParams.sectionName = "systemHeap";
Memory.defaultHeapInstance = HeapMem.create(heapMemParams);

/*
 * Creating Heap Memories for using with test application
 */
/* Create a heap for TCP3D input/output data using ti.bios.HeapMem. */
/* Program.sectMap["tcp3DataSection"] = {loadSegment: "MSMCSRAM"};
var heapMemParams1 = new HeapMem.Params;
heapMemParams1.size = 0x180000;
heapMemParams1.sectionName = "tcp3DataSection";
Program.global.tcp3dDataHeap = HeapMem.create(heapMemParams1); */

/* Create a heap for TCP3D driver using ti.bios.HeapMem. */
Program.sectMap["tcp3DriverSection"] = Program.platform.dataMemory;
var heapMemParams2 = new HeapMem.Params;
heapMemParams2.size = 0x4000;
heapMemParams2.sectionName = "tcp3DriverSection";
Program.global.tcp3dDrvHeap = HeapMem.create(heapMemParams2);

/* To avoid wasting shared memory for Notify and MessageQ transports */
for (var i = 0; i < MultiProc.numProcessors; i++) {
    Ipc.setEntryMeta({
        remoteProcId: i,
        setupNotify: false,
        setupMessageQ: false,
    });
}


SharedRegion.setEntryMeta(0,
    { base: 0x0C000000,
      len: 0x200000,
      ownerProcId: 0,
      cacheLineSize: 64,
      isValid: true,
      name: "sharemem",
    });

/*
 * Setup the Logger for Driver
 */
var LoggerSys = xdc.useModule('xdc.runtime.LoggerSys');
var LoggerSys0Params0 = new LoggerSys.Params;
LoggerSys0Params0.instance.name = 'tcp3dDrvLog';
Program.global.tcp3dDrvLog = LoggerSys.create(LoggerSys0Params0);

/*
 * Pull in modules for EDMA3 LLD use
 */
xdc.useModule('ti.sysbios.family.c64p.Hwi');
xdc.useModule('ti.sysbios.family.c66.tci66xx.CpIntc');
var ECM = xdc.useModule('ti.sysbios.family.c64p.EventCombiner');

/*
 * Enable Event Groups here and registering of ISR for specific GEM INTC is done
 * using EventCombiner_dispatchPlug() and Hwi_eventMap() APIs
 */
ECM.eventGroupHwiNum[0] = 7;
ECM.eventGroupHwiNum[1] = 8;
ECM.eventGroupHwiNum[2] = 9;
ECM.eventGroupHwiNum[3] = 10;

/*******************************************************************
 * Other Dependent packages
 *******************************************************************/
/*xdc.loadPackage('ti.wbi.common.api');*/
xdc.loadPackage('ti.sdo.edma3.drv');

/* Load the CSL package */
var Csl = xdc.useModule('ti.csl.Settings');

/* Device specific configuration */
var devName = "k2k";
Csl.deviceType = devName;

/* end of file */
