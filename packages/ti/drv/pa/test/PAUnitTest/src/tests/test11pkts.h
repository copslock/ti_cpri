/*
 *
 * Copyright (C) 2010-2013 Texas Instruments Incorporated - http://www.ti.com/
 *
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
*/

#ifndef TEST11PKTS_H_
#define TEST11PKTS_H_

#ifdef __LINUX_USER_SPACE
#ifndef Bool
#define Bool uint8_t
#endif
#endif

/* Valid rx MAC addresses used during the test */
typedef struct t11EthSetup  {
	paEthInfo_t  ethInfo;		/* PA Ethernet configuration structure */
	Bool	     acked;			/* Set to TRUE when the reply to the command is received */
} t11EthSetup_t;


#ifdef _TMS320C6X
#pragma DATA_SECTION (t11EthSetup, ".testPkts")
#endif
static t11EthSetup_t t11EthSetup[] =  {

	/* MAC Entry 0 */
    {
      {	{ 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },      /* Source mac is dont care */
   	 	{ 0x00, 0x01, 0x02, 0x03, 0x04, 0xaa },      /* Dest mac */
    	0,      /* Vlan      */
    	0,      /* ethertype */
    	0,		/* mpls tag  */
        0       /* input EMAC port */
      },
      FALSE
  	}
};

typedef struct t11IpSetup_s  {
    Bool       innerIp;     /* Inner IP link to MAC */
    Bool       nextLut1;    /* Next route is LUT1 */
	int		   lHandleIdx;  /* Linked handle (to previous L2 or L3 layer) */
	paIpInfo_t ipInfo;		/* PA IP configuration structure */
	Bool	   acked;		/* Set to TRUE when the reply to the command is received */

} t11IpSetup_t;

#ifdef _TMS320C6X
#pragma DATA_SECTION(t11IpSetup, ".testPkts")
#endif
static t11IpSetup_t  t11IpSetup[] = {
	/* IP Entry 0 */
	{
        FALSE,  /* Outer IP */
        FALSE,  /* Next Route LUT2 */
		0,	/* Linked to dest mac index 0 */
		{	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Source address */
			{ 200, 201, 202, 100, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Destination address */
			0,			/* SPI */
			0,			/* Flow */
			pa_IPV4,	/* IP Type */
			0,			/* GRE Protocol */
			0,			/* Protocol */
			0,			/* TOS */
			0,			/* TOS Care flag */
            0           /* SCTP port */
		},
		FALSE
	},

	/* IP Entry 1 */
	{
        FALSE, /* Outer IP */
        TRUE,  /* Next Route LUT1 */
        0,	/* Linked to dest mac index 0 */
		{	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Source address */
			{ 200, 201, 202, 101, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Destination address */
			0,			/* SPI */
			0,			/* Flow */
			pa_IPV4,	/* IP Type */
			0,			/* GRE Protocol */
			0,			/* Protocol */
			0,			/* TOS */
			0,			/* TOS Care flag */
            0           /* SCTP port */
		},
		FALSE
	},

	/* IP Entry 2 */
	{
        TRUE,   /* Inner IP */
        FALSE,  /* Next Route LUT2 */
        1,	    /* Linked to outer IP  index 1 */
		{	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Source address */
			{ 200, 201, 202, 102, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Destination address */
			0,			/* SPI */
			0,			/* Flow */
			pa_IPV4,	/* IP Type */
			0,			/* GRE Protocol */
			0,			/* Protocol */
			0,			/* TOS */
			0,			/* TOS Care flag */
            0           /* SCTP port */
		},
		FALSE
	},
	/* IP Entry 3 */
	{
        FALSE,   /* Outer IP */
        FALSE,  /* Next Route LUT1 */
        0,	    /* Linked to dest mac index 0 */
		{	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Source address */
			{ 0x00, 0x02, 0x04, 0x08,
			0x10, 0x12, 0x14, 0x18,
			0x20, 0x22, 0x24, 0x28,
			0x30, 0x32, 0x34, 0x38 },  /* IP Destination address */
			0,			/* SPI */
			0,			/* Flow */
			pa_IPV6,	/* IP Type */
			0,			/* GRE Protocol */
			0,			/* Protocol */
			0,			/* TOS */
			0,			/* TOS Care flag */
            0           /* SCTP port */
		},
		FALSE
	},

	/* IP Entry 4 */
	{
        FALSE, /* Outer IP */
        TRUE,  /* Next Route LUT1 */
        0,	   /* Linked to dest mac index 0 */
		{	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Source address */
			{ 0x00, 0x02, 0x04, 0x08,
			  0x10, 0x12, 0x14, 0x18,
			  0x20, 0x22, 0x24, 0x28,
			  0x30, 0x32, 0x34, 0x39 },  /* IP Destination address */
			0,			/* SPI */
			0,			/* Flow */
			pa_IPV6,	/* IP Type */
			0,			/* GRE Protocol */
			0,			/* Protocol */
			0,			/* TOS */
			0,			/* TOS Care flag */
            0           /* SCTP port */
		},
		FALSE
	},

	/* IP Entry 5 */
	{
        TRUE,   /* Inner IP */
        FALSE,  /* Next Route LUT2 */
        4,	    /* Linked to outer IP index 4 */
		{	{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 },  /* IP Source address */
			{ 0x00, 0x02, 0x04, 0x08,
			  0x10, 0x12, 0x14, 0x18,
			  0x20, 0x22, 0x24, 0x28,
			  0x30, 0x32, 0x34, 0x3a },  /* IP Destination address */
			0,			/* SPI */
			0,			/* Flow */
			pa_IPV6,	/* IP Type */
			0,			/* GRE Protocol */
			0,			/* Protocol */
			0,			/* TOS */
			0,			/* TOS Care flag */
            0           /* SCTP port */
		},
		FALSE
	}
};

typedef struct t11UdpSetup_s  {
	int		   lHandleIdx;  /* Linked handle (to previous L3 layer) */
	uint16_t   port;		/* destination port number */
	Bool	   acked;		/* Set to TRUE when the reply to the command is received */
} t11UdpSetup_t;

#ifdef _TMS320C6X
#pragma DATA_SECTION(t11UdpSetup, ".testPkts")
#endif
static t11UdpSetup_t  t11UdpSetup[] = {
	/* UDP Entry 0 */
	{
		0,	    /* Linked to dest ip index 0 */
        0x8000, /* destination port number */
		FALSE
	},

	/* UDP Entry 1 */
	{
		0,	    /* Linked to dest ip index 0 */
        0x8002, /* destination port number */
		FALSE
	},

	/* UDP Entry 2 */
	{
		2,	    /* Linked to dest ip index 2 */
        0x9000, /* destination port number */
		FALSE
	},

	/* UDP Entry 3 */
	{
		2,	    /* Linked to dest ip index 2 */
        0x9002, /* destination port number */
		FALSE
	},

	/* UDP Entry 4 */
	{
		3,	    /* Linked to dest ip index 3 */
        0x8100, /* destination port number */
		FALSE
	},

	/* UDP Entry 5 */
	{
		3,	    /* Linked to dest ip index 3 */
        0x8102, /* destination port number */
		FALSE
	},


	/* UDP Entry 6 */
	{
		5,	    /* Linked to dest ip index 5 */
        0x9100, /* destination port number */
		FALSE
	},

	/* UDP Entry 7 */
	{
		5,	    /* Linked to dest ip index 5 */
        0x9102, /* destination port number */
		FALSE
	}

};

/* packet 0
 * mac dest = 00:01:02:03:04:aa
 * PPPoE header for IPv4
 * ip src  = 158.218.109.11
 * ip dest = 200.201.202.100
 * Designed to match IP configuration 0 */
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt0, ".testPkts")
#endif
static uint8_t pkt0[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x00, 0xe0,
	0xa6, 0x66, 0x57, 0x04, 0x88, 0x64, 0x11, 0x00,
    0x12, 0x34, 0x00, 0x00, 0x00, 0x21, 0x45, 0x00,
	0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x05, 0x11,
	0x16, 0x78, 0x9e, 0xda, 0x6d, 0x0b, 0xc8, 0xc9,
	0xca, 0x64, 0xaa, 0xbb, 0x80, 0x00, 0x00, 0x00,
	0x00, 0x00
    };

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt0Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt0Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,1,0,50),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(0,0,0,PASAHO_HDR_UNKNOWN),   /* end offset = various(NA), errIdx, portNum = 0, nextHdr */
	TF_FORM_PKT_INFO_WORD2(22,42,50,0),    	            /* L3 offset = 22, l4Offset = 42, l5Offset = 50, ahEspOffset = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv4| PASAHO_HDR_BITMASK_PPPoE | PASAHO_HDR_BITMASK_UDP),
	                        0, 0),                      /* bitmap, pdspNum = 0, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)           	            /* Pseudo header checksum */

};
#else
static pasahoLongInfo_t pkt0Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,50),		/* cmd len = 24, start offset = 50 (UDP Payload) */
	TF_FORM_PKT_INFO_WORD1(0,0,1,0,0,0),    /* end offset = various(NA), pmatch set */
	TF_FORM_PKT_INFO_WORD2(22,42,50,0),		/* L3 offset = 22, l4Offset = 42, l5Offset = 50, ahEspOffset = 0 */

	/* bitmap, next header = Unkown, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP | PASAHO_HDR_BITMASK_UDP),PASAHO_HDR_UNKNOWN,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif

/* packet 1
 * mac dest = 00:01:02:03:04:aa
 * ip src  = 158.218.109.12
 * ip dest = 200.201.202.100
 * Designed to match IP configuration 0 */
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt1, ".testPkts")
#endif
static uint8_t pkt1[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x00, 0xe0,
	0xa6, 0x66, 0x57, 0x04, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x05, 0x11,
	0x16, 0x78, 0x9e, 0xda, 0x6d, 0x0c, 0xc8, 0xc9,
	0xca, 0x64, 0xaa, 0xbb, 0x80, 0x02, 0x00, 0x00,
	0x00, 0x00
    };

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt1Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt1Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,1,0,42),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(0,0,0,PASAHO_HDR_UNKNOWN),   /* end offset = various(NA), errIdx, portNum = 0, nextHdr */
	TF_FORM_PKT_INFO_WORD2(14,34,42,0),    	            /* L3 offset = 14, l4Offset = 34, l5Offset = 42, ahEspOffset = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv4 | PASAHO_HDR_BITMASK_UDP),
	                        0, 0),                      /* bitmap, pdspNum = 0, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)           	            /* Pseudo header checksum */
};
#else
static pasahoLongInfo_t pkt1Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,42),		/* cmd len = 24, start offset = 42 (Payload) */
	TF_FORM_PKT_INFO_WORD1(0,0,1,0,0,0),    /* end offset = various (NA), pmatch set */
	TF_FORM_PKT_INFO_WORD2(14,34,42,0),		/* L3 offset = 14, l4Offset = 34, l5Offset = 42, ahEspOffset = 0 */

	/* bitmap, next header = Unkown, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP | PASAHO_HDR_BITMASK_UDP),PASAHO_HDR_UNKNOWN,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif

/* packet 2
 * mac dest = 00:01:02:03:04:aa
 * Outer ip src  = 158.218.109.32
 * Outer ip dest = 200.201.202.101
 * Inner ip src  = 158.218.109.33
 * Inner ip dest = 200.201.202.102
 * Designed to match IP configuration 1/2 */
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt2, ".testPkts")
#endif
static uint8_t pkt2[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x00, 0xe0,
	0xa6, 0x66, 0x57, 0x04, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x05, 0x04,
	0x16, 0x78, 0x9e, 0xda, 0x6d, 0x20, 0xc8, 0xc9,
	0xca, 0x65, 0x45, 0x00, 0x00, 0x62, 0x00, 0x00,
    0x00, 0x00, 0x05, 0x11, 0x16, 0x78, 0x9e, 0xda,
    0x6d, 0x21, 0xc8, 0xc9, 0xca, 0x66, 0xaa, 0xbb,
    0x90, 0x00, 0x00, 0x00, 0x00, 0x00
    };

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt2Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt2Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,1,0,62),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(0,0,0,PASAHO_HDR_UNKNOWN),   /* end offset = various(NA), errIdx, portNum = 0, nextHdr */
	TF_FORM_PKT_INFO_WORD2(14,54,62,0),    	            /* L3 offset = 14, l4Offset = 54, l5Offset = 62, ahEspOffset = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv4 | PASAHO_HDR_BITMASK_UDP),
	                        0, 0),                      /* bitmap, pdspNum = 0, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 2),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 2 */
	TF_FORM_PKT_INFO_WORD5(0)           	            /* Pseudo header checksum */
};
#else
static pasahoLongInfo_t pkt2Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,62),		/* cmd len = 24, start offset = 62 (Payload) */
	TF_FORM_PKT_INFO_WORD1(0,0,1,0,0,0),    /* end offset = various (NA), pmatch set */
	TF_FORM_PKT_INFO_WORD2(14,54,62,0),		/* L3 offset = 14, l4Offset = 54, l5Offset = 62, ahEspOffset = 0 */

	/* bitmap, next header = Unkown, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP | PASAHO_HDR_BITMASK_UDP),PASAHO_HDR_UNKNOWN,0,2,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif

/* packet 3
 * mac dest = 00:01:02:03:04:aa
 * Outer ip src  = 158.218.109.48
 * Outer ip dest = 200.201.202.101
 * Inner ip src  = 158.218.109.49
 * Inner ip dest = 200.201.202.102
 * Designed to match IP configuration 1/2 */
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt3, ".testPkts")
#endif
static uint8_t pkt3[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x00, 0xe0,
	0xa6, 0x66, 0x57, 0x04, 0x08, 0x00, 0x45, 0x00,
	0x00, 0x62, 0x00, 0x00, 0x00, 0x00, 0x05, 0x04,
	0x16, 0x78, 0x9e, 0xda, 0x6d, 0x30, 0xc8, 0xc9,
	0xca, 0x65, 0x45, 0x00, 0x00, 0x62, 0x00, 0x00,
    0x00, 0x00, 0x05, 0x11, 0x16, 0x78, 0x9e, 0xda,
    0x6d, 0x31, 0xc8, 0xc9, 0xca, 0x66, 0xaa, 0xbb,
    0x90, 0x02, 0x00, 0x00, 0x00, 0x00
    };

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt3Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt3Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,1,0,62),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(0,0,0,PASAHO_HDR_UNKNOWN),   /* end offset = various(NA), errIdx, portNum = 0, nextHdr */
	TF_FORM_PKT_INFO_WORD2(14,54,62,0),    	            /* L3 offset = 14, l4Offset = 54, l5Offset = 62, ahEspOffset = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv4 | PASAHO_HDR_BITMASK_UDP),
	                        0, 0),                      /* bitmap, pdspNum = 0, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 2),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 2 */
	TF_FORM_PKT_INFO_WORD5(0)           	            /* Pseudo header checksum */
};
#else
static pasahoLongInfo_t pkt3Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,62),		/* cmd len = 24, start offset = 62 (Payload) */
	TF_FORM_PKT_INFO_WORD1(0,0,1,0,0,0),    /* end offset = various(NA), pmatch set */
	TF_FORM_PKT_INFO_WORD2(14,54,62,0),		/* L3 offset = 14, l4Offset = 54, l5Offset = 62, ahEspOffset = 0 */

	/* bitmap, next header = Unkown, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP | PASAHO_HDR_BITMASK_UDP),PASAHO_HDR_UNKNOWN,0,2,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif

/* packet 4
 * mac dest = 00:01:02:03:04:aa
 * Outer ip src  = .... 0x00, 0x00, 0x00, 0x00
 * Outer ip dest = .... 0x30, 0x32, 0x34, 0x38
 * Designed to match IP configuration 3 */
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt4, ".testPkts")
#endif
static uint8_t pkt4[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0xaa,
	0x00, 0xe0, 0xa6, 0x66, 0x57, 0x04,
    0x88, 0x64, 0x11, 0x00, 0x12, 0x34,
    0x00, 0x00, 0x00, 0x57,
	0x60, 0x01, 0x01, 0x01,                 /* IPv6 hedaer */
	0x00, 0x00, 0x00, 0xFF,
	0x20, 0x02,	0x9e, 0xda,
	0x6d, 0x30,	0x00, 0x00,
	0x00, 0x00,	0x00, 0x00,
	0x00, 0x00, 0x00, 0x00,
	0x00, 0x02, 0x04, 0x08,
	0x10, 0x12, 0x14, 0x18,
	0x20, 0x22, 0x24, 0x28,
	0x30, 0x32, 0x34, 0x38,

    0x11, 0x01, 0x04, 0x08,                /* Hop-by-hop header */
    0x10, 0x12, 0x14, 0x18,
    0x20, 0x22, 0x24, 0x28,
    0x30, 0x32, 0x34, 0x38,

	0xaa, 0xbb, 0x81, 0x00,
	0x00, 0x00, 0x00, 0x00
    };

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt4Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt4Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,1,0,86),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(0,0,0,PASAHO_HDR_UNKNOWN),   /* end offset = various(NA), errIdx, portNum = 0, nextHdr */
	TF_FORM_PKT_INFO_WORD2(22,78,86,0),    	            /* L3 offset = 22, l4Offset = 78, l5Offset = 86, ahEspOffset = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6 | PASAHO_HDR_BITMASK_PPPoE | PASAHO_HDR_BITMASK_UDP),
	                        0, 0),                      /* bitmap, pdspNum = 0, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)           	            /* Pseudo header checksum */
};
#else
static pasahoLongInfo_t pkt4Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,86),		/* cmd len = 24, start offset (Payload) */
	TF_FORM_PKT_INFO_WORD1(0,0,1,0,0,0),    /* end offset = various(NA), pmatch set */
	TF_FORM_PKT_INFO_WORD2(22,78,86,0),		/* L3 offset = 22, l4Offset = 78, l5Offset = 86, ahEspOffset = 0 */

	/* bitmap, next header = Unkown, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP | PASAHO_HDR_BITMASK_UDP),PASAHO_HDR_UNKNOWN,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif

/* packet 5
 * mac dest = 00:01:02:03:04:aa
 * Outer ip src  = .... 0x00, 0x00, 0x00, 0x01
 * Outer ip dest = .... 0x30, 0x32, 0x34, 0x38
 * Designed to match IP configuration 3 */
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt5, ".testPkts")
#endif
static uint8_t pkt5[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0xaa,
	0x00, 0xe0, 0xa6, 0x66, 0x57, 0x04,
	0x86, 0xdd,
	0x60, 0x01, 0x01, 0x01,      // Iv6 header
	0x00, 0x00, 0x2b, 0xFF,
	0x20, 0x02,	0x9e, 0xda,
	0x6d, 0x30,	0x00, 0x00,
	0x00, 0x00,	0x00, 0x00,
	0x00, 0x00, 0x00, 0x01,
	0x00, 0x02, 0x04, 0x08,
	0x10, 0x12, 0x14, 0x18,
	0x20, 0x22, 0x24, 0x28,
	0x30, 0x32, 0x34, 0x38,

    0x11, 0x01, 0x01, 0x00,      // Extension Route header
    0x10, 0x12, 0x14, 0x18,
    0x20, 0x22, 0x24, 0x28,
    0x30, 0x32, 0x34, 0x38,

	0xaa, 0xbb, 0x81, 0x02,
	0x00, 0x00, 0x00, 0x00
    };

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt5Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt5Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,1,0,78),		        /* cmd len = 14, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(0,0,0,PASAHO_HDR_UNKNOWN),   /* end offset = various(NA), errIdx, portNum = 0, nextHdr */
	TF_FORM_PKT_INFO_WORD2(14,70,78,0),    	            /* L3 offset = 14, l4Offset = 70, l5Offset = 78, ahEspOffset = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6 | PASAHO_HDR_BITMASK_UDP),
	                        0, 0),                      /* bitmap, pdspNum = 0, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)           	            /* Pseudo header checksum */
};
#else
static pasahoLongInfo_t pkt5Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,78),		/* cmd len = 24, start offset = 62 (Payload) */
	TF_FORM_PKT_INFO_WORD1(0,0,1,0,0,0),    /* end offset = various(NA), pmatch set */
	TF_FORM_PKT_INFO_WORD2(14,70,78,0),		/* L3 offset = 14, l4Offset = 70, l5Offset = 78, ahEspOffset = 0 */

	/* bitmap, next header = Unkown, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP | PASAHO_HDR_BITMASK_UDP),PASAHO_HDR_UNKNOWN,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)

};
#endif

/* packet 6
 * mac dest = 00:01:02:03:04:aa
 * Outer ip src  = .... 0x00, 0x00, 0x00, 0x02
 * Outer ip dest = .... 0x30, 0x32, 0x34, 0x39
 * Inner ip src  = .... 0x00, 0x00, 0x00, 0x03
 * Inner ip dest = .... 0x30, 0x32, 0x34, 0x3a
 * Designed to match IP configuration 5 */
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt6, ".testPkts")
#endif
static uint8_t pkt6[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0xaa,
	0x00, 0xe0, 0xa6, 0x66, 0x57, 0x04,
	0x86, 0xdd,
	0x60, 0x01, 0x01, 0x01,      // Iv6 header
	0x00, 0x00, 0x29, 0xFF,
	0x20, 0x02,	0x9e, 0xda,
	0x6d, 0x30,	0x00, 0x00,
	0x00, 0x00,	0x00, 0x00,
	0x00, 0x00, 0x00, 0x02,
	0x00, 0x02, 0x04, 0x08,
	0x10, 0x12, 0x14, 0x18,
	0x20, 0x22, 0x24, 0x28,
	0x30, 0x32, 0x34, 0x39,

	0x60, 0x01, 0x01, 0x01,      // Iv6 header
	0x00, 0x00, 0x11, 0xFF,
	0x20, 0x02,	0x9e, 0xda,
	0x6d, 0x30,	0x00, 0x00,
	0x00, 0x00,	0x00, 0x00,
	0x00, 0x00, 0x00, 0x03,
	0x00, 0x02, 0x04, 0x08,
	0x10, 0x12, 0x14, 0x18,
	0x20, 0x22, 0x24, 0x28,
	0x30, 0x32, 0x34, 0x3a,

	0xaa, 0xbb, 0x91, 0x00,
	0x00, 0x00, 0x00, 0x00
    };

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt6Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt6Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,1,0,102),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(0,0,0,PASAHO_HDR_UNKNOWN),   /* end offset = various(NA), errIdx, portNum = 0, nextHdr */
	TF_FORM_PKT_INFO_WORD2(14,94,102,0),    	        /* L3 offset = 14, l4Offset = 94, l5Offset = 102, ahEspOffset = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6 | PASAHO_HDR_BITMASK_UDP),
	                        0, 0),                      /* bitmap, pdspNum = 0, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 2),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 2 */
	TF_FORM_PKT_INFO_WORD5(0)           	            /* Pseudo header checksum */
};
#else
static pasahoLongInfo_t pkt6Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,102),		/* cmd len = 24, start offset  */
	TF_FORM_PKT_INFO_WORD1(0,0,1,0,0,0),    /* end offset = various(NA), pmatch set */
	TF_FORM_PKT_INFO_WORD2(14,94,102,0),    /* L3 offset = 14, l4Offset = 94, l5Offset = 102, ahEspOffset = 0 */

	/* bitmap, next header = Unkown, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP | PASAHO_HDR_BITMASK_UDP),PASAHO_HDR_UNKNOWN,0,2,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)

};
#endif

/* packet 7
 * mac dest = 00:01:02:03:04:aa
 * Outer ip src  = .... 0x00, 0x00, 0x00, 0x04
 * Outer ip dest = .... 0x30, 0x32, 0x34, 0x39
 * Inner ip src  = .... 0x00, 0x00, 0x00, 0x05
 * Inner ip dest = .... 0x30, 0x32, 0x34, 0x3a
 * Designed to match IP configuration 5 */
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt7, ".testPkts")
#endif
static uint8_t pkt7[] = {
	0x00, 0x01, 0x02, 0x03, 0x04, 0xaa,
	0x00, 0xe0, 0xa6, 0x66, 0x57, 0x04,
	0x86, 0xdd,
	0x60, 0x01, 0x01, 0x01,      // Iv6 header
	0x00, 0x00, 0x29, 0xFF,
	0x20, 0x02,	0x9e, 0xda,
	0x6d, 0x30,	0x00, 0x00,
	0x00, 0x00,	0x00, 0x00,
	0x00, 0x00, 0x00, 0x04,
	0x00, 0x02, 0x04, 0x08,
	0x10, 0x12, 0x14, 0x18,
	0x20, 0x22, 0x24, 0x28,
	0x30, 0x32, 0x34, 0x39,

	0x60, 0x01, 0x01, 0x01,      // Iv6 header
	0x00, 0x00, 0x11, 0xFF,
	0x20, 0x02,	0x9e, 0xda,
	0x6d, 0x30,	0x00, 0x00,
	0x00, 0x00,	0x00, 0x00,
	0x00, 0x00, 0x00, 0x05,
	0x00, 0x02, 0x04, 0x08,
	0x10, 0x12, 0x14, 0x18,
	0x20, 0x22, 0x24, 0x28,
	0x30, 0x32, 0x34, 0x3a,

	0xaa, 0xbb, 0x91, 0x02,
	0x00, 0x00, 0x00, 0x00
    };

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt7Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt7Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,1,0,102),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(0,0,0,PASAHO_HDR_UNKNOWN),   /* end offset = various(NA), errIdx, portNum = 0, nextHdr */
	TF_FORM_PKT_INFO_WORD2(14,94,102,0),    	        /* L3 offset = 14, l4Offset = 94, l5Offset = 102, ahEspOffset = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6 | PASAHO_HDR_BITMASK_UDP),
	                        0, 0),                      /* bitmap, pdspNum = 0, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 2),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 2 */
	TF_FORM_PKT_INFO_WORD5(0)           	            /* Pseudo header checksum */
};
#else
static pasahoLongInfo_t pkt7Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,102),		/* cmd len = 24, start offset  */
	TF_FORM_PKT_INFO_WORD1(0,0,1,0,0,0),    /* end offset = various(NA), pmatch set */
	TF_FORM_PKT_INFO_WORD2(14,94,102,0),    /* L3 offset = 14, l4Offset = 94, l5Offset = 102, ahEspOffset = 0 */

	/* bitmap, next header = Unkown, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP | PASAHO_HDR_BITMASK_UDP),PASAHO_HDR_UNKNOWN,0,2,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)

};
#endif


/* packet 8
 * mac dest = 00:01:02:03:04:aa  (MAC Info 0)
*/
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt8, ".testPkts")
#endif
/* Frame (1514 bytes) */
static const unsigned char pkt8[1514] = {
0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x0a, 0xc0, /* ....7B.. */
0xde, 0x35, 0xd8, 0x6c, 0x86, 0xdd, 0x60, 0x00, /* .5.l..`. */
0x00, 0x00, 0x0f, 0x94, 0x3c, 0x40, 0xba, 0xba, /* ....<@.. */
0xba, 0xba, 0xba, 0xba, 0xba, 0xba, 0x08, 0xc0, /* ........ */
0xde, 0xff, 0xfe, 0x35, 0xd8, 0x6c, 0xfe, 0x80, /* ...5.l.. */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc0, /* ........ */
0xde, 0xff, 0xfe, 0x35, 0xd8, 0x6c, 0x3b, 0x46, /* ...5.l;F */
0x00, 0xd9, 0xd8, 0x01, 0x02, 0x03, 0x04, 0x05, /* ........ */
0x06, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff                                      /* .. */
};


#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt8Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt8Info = {
	TF_FORM_PKT_INFO_WORD0(0,24,1,0,54),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(142,0,0,PASAHO_HDR_UDP),     /* end offset, errIdx, portNum = 0, nextHdr = UDP */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),    	            /* L3 offset = 14  */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6),
	                        0, 0),                      /* bitmap, pdspNum = 1, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)
};
#else
static pasahoLongInfo_t pkt8Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,622),		/* cmd len = 24, start offset = 622 (UDP Header) */
	TF_FORM_PKT_INFO_WORD1(142,0,1,0,0,0),  /* end offset */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),		/* L3 offset = 14, l4Offset = 0, l5Offset = 0, ahEspOffset = 0 */

	/* bitmap, next header = UDP, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP),PASAHO_HDR_UDP,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif

/* packet 9
 * mac dest = 00:01:02:03:04:aa  (MAC Info 0)
*/
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt9, ".testPkts")
#endif
/* Frame (385 bytes) */
static const unsigned char pkt9[385] = {
0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x0a, 0xc0, /* ....az.. */
0xde, 0xc1, 0x56, 0x17, 0x86, 0xdd, 0x60, 0x00, /* ..V...`. */
0x00, 0x00, 0x01, 0x4b, 0x00, 0x40, 0xb6, 0xb6, /* ...K.@.. */
0xb6, 0xb6, 0xb6, 0xb6, 0xb6, 0xb6, 0x9d, 0x9d, /* ........ */
0x9d, 0x9d, 0x9d, 0x9d, 0x9d, 0x9d, 0xff, 0x02, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x9f, /* ........ */
0x03, 0x06, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0xd8, 0x3a, 0x01, 0x00, 0x02, 0xf6, 0x00, 0x00, /* .:...... */
0x00, 0x83, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x80, 0x00, 0x21, 0x1a, 0x00, 0x00, 0x00, /* ...!.... */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00                                            /* . */
};

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt9Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt9Info = {
	TF_FORM_PKT_INFO_WORD0(0,24,1,0,54),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(142,0,0,PASAHO_HDR_UDP),     /* end offset, errIdx, portNum = 0, nextHdr = UDP */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),    	            /* L3 offset = 14  */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6),
	                        0, 0),                      /* bitmap, pdspNum = 1, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)
};
#else
static pasahoLongInfo_t pkt9Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,622),		/* cmd len = 24, start offset = 622 (UDP Header) */
	TF_FORM_PKT_INFO_WORD1(142,0,1,0,0,0),  /* end offset */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),		/* L3 offset = 14, l4Offset = 0, l5Offset = 0, ahEspOffset = 0 */

	/* bitmap, next header = UDP, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP),PASAHO_HDR_UDP,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif

/* packet 10
 * mac dest = 00:01:02:03:04:aa  (MAC Info 0)
*/
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt10, ".testPkts")
#endif

/* Frame (1514 bytes) */
static const unsigned char pkt10[1514] = {
0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x0a, 0xc0, /* ....az.. */
0xde, 0x6a, 0x9d, 0x19, 0x86, 0xdd, 0x60, 0x00, /* .j....`. */
0x00, 0x00, 0x09, 0x78, 0x00, 0x40, 0xfe, 0x80, /* ...x.@.. */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc0, /* ........ */
0xde, 0xff, 0xfe, 0x6a, 0x9d, 0x19, 0x20, 0x00, /* ...j.. . */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x3c, 0xff, /* ......<. */
0xc9, 0xd1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, /* ........ */
0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, 0xe1, /* ........ */
0xe1, 0xe1, 0x00, 0x04, 0x04, 0x00, 0x00, 0x00, /* ........ */
0x31, 0x09, 0x05, 0x00, 0x00, 0x59, 0x00, 0x00, /* 1....Y.. */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, 0x7f, /* ........ */
0x7f, 0x7f                                      /* .. */
};

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt10Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt10Info = {
	TF_FORM_PKT_INFO_WORD0(0,24,1,0,54),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(142,0,0,PASAHO_HDR_UDP),     /* end offset, errIdx, portNum = 0, nextHdr = UDP */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),    	            /* L3 offset = 14  */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6),
	                        0, 0),                      /* bitmap, pdspNum = 1, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)
};
#else
static pasahoLongInfo_t pkt10Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,622),		/* cmd len = 24, start offset = 622 (UDP Header) */
	TF_FORM_PKT_INFO_WORD1(142,0,1,0,0,0),  /* end offset */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),		/* L3 offset = 14, l4Offset = 0, l5Offset = 0, ahEspOffset = 0 */

	/* bitmap, next header = UDP, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP),PASAHO_HDR_UDP,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif

/* packet 11
 * mac dest = 00:01:02:03:04:aa  (MAC Info 0)
*/
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt11, ".testPkts")
#endif

/* Frame (1514 bytes) */
static const unsigned char pkt11[1514] = {
0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x0a, 0xc0, /* ....az.. */
0xde, 0x6a, 0x9d, 0x19, 0x86, 0xdd, 0x60, 0x00, /* .j....`. */
0x00, 0x00, 0x0b, 0x90, 0x3c, 0x40, 0xfe, 0x80, /* ....<@.. */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc0, /* ........ */
0xde, 0xff, 0xfe, 0x6a, 0x9d, 0x19, 0x20, 0x00, /* ...j.. . */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, /* ........ */
0x00, 0xc0, 0xff, 0x01, 0x02, 0x03, 0x04, 0x05, /* ........ */
0x06, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0x03, 0xff, 0x01, 0x02, 0x03, 0x04, 0x05, /* ........ */
0x06, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff                                      /* .. */
};

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt11Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt11Info = {
	TF_FORM_PKT_INFO_WORD0(0,24,1,0,54),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(142,0,0,PASAHO_HDR_UDP),     /* end offset, errIdx, portNum = 0, nextHdr = UDP */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),    	            /* L3 offset = 14  */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6),
	                        0, 0),                      /* bitmap, pdspNum = 1, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)
};
#else
static pasahoLongInfo_t pkt11Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,622),		/* cmd len = 24, start offset = 622 (UDP Header) */
	TF_FORM_PKT_INFO_WORD1(142,0,1,0,0,0),  /* end offset */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),		/* L3 offset = 14, l4Offset = 0, l5Offset = 0, ahEspOffset = 0 */

	/* bitmap, next header = UDP, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP),PASAHO_HDR_UDP,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif


/* packet 12
 * mac dest = 00:01:02:03:04:aa  (MAC Info 0)
*/
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt12, ".testPkts")
#endif

/* Frame (1514 bytes) */
static const unsigned char pkt12[1514] = {
0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x0a, 0xc0, /* ....az.. */
0xde, 0x6a, 0x9d, 0x19, 0x86, 0xdd, 0x60, 0x00, /* .j....`. */
0x00, 0x00, 0x0b, 0x90, 0x3c, 0x40, 0xfe, 0x80, /* ....<@.. */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc0, /* ........ */
0xde, 0xff, 0xfe, 0x6a, 0x9d, 0x19, 0x20, 0x00, /* ...j.. . */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xff, /* ........ */
0xca, 0x12, 0x76, 0x08, 0x20, 0x00, 0x00, 0x00, /* ..v. ... */
0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, /* .... ... */
0x00, 0x00, 0x00, 0x00, 0x00, 0xad, 0xff, 0x01, /* ........ */
0x02, 0x03, 0x04, 0x05, 0x06, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, /* ........ */
0x00, 0xff                                      /* .. */
};

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt12Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt12Info = {
	TF_FORM_PKT_INFO_WORD0(0,24,1,0,54),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(142,0,0,PASAHO_HDR_UDP),     /* end offset, errIdx, portNum = 0, nextHdr = UDP */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),    	            /* L3 offset = 14  */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6),
	                        0, 0),                      /* bitmap, pdspNum = 1, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)
};
#else
static pasahoLongInfo_t pkt12Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,622),		/* cmd len = 24, start offset = 622 (UDP Header) */
	TF_FORM_PKT_INFO_WORD1(142,0,1,0,0,0),  /* end offset */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),		/* L3 offset = 14, l4Offset = 0, l5Offset = 0, ahEspOffset = 0 */

	/* bitmap, next header = UDP, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP),PASAHO_HDR_UDP,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif




/* packet 13
 * mac dest = 00:01:02:03:04:aa  (MAC Info 0)
*/
#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt13, ".testPkts")
#endif

/* Frame (1514 bytes) */
static const unsigned char pkt13[1514] = {
0x00, 0x01, 0x02, 0x03, 0x04, 0xaa, 0x0a, 0xc0, /* ....az.. */
0xde, 0x6a, 0x9d, 0x19, 0x86, 0xdd, 0x60, 0x00, /* .j....`. */
0x00, 0x00, 0x0f, 0x8d, 0x3c, 0x40, 0xfe, 0x80, /* ....<@.. */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0xc0, /* ........ */
0xde, 0xff, 0xfe, 0x6a, 0x9d, 0x19, 0x20, 0x00, /* ...j.. . */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x3c, 0xff, /* ......<. */
0x06, 0x06, 0x00, 0xe3, 0x00, 0x00, 0x00, 0x00, /* ........ */
0xba, 0x01, 0x00, 0x00, 0x0a, 0xff, 0x01, 0x02, /* ........ */
0x03, 0x04, 0x05, 0x06, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xea, 0x10, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, /* ........ */
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09, /* ........ */
0x05, 0x00, 0xff, 0xdf, 0xff, 0xff, 0xbe, 0xff, /* ........ */
0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00, 0xff, 0x00, 0xff, 0x00, 0xff, 0x00, /* ........ */
0xff, 0x00                                      /* .. */
};

#ifdef _TMS320C6X
#pragma DATA_SECTION (pkt13Info, ".testPkts")
#endif
#ifdef NSS_GEN2
static pasahoLongInfo_t pkt13Info = {
	TF_FORM_PKT_INFO_WORD0(0,24,1,0,54),		        /* cmd len = 24, pmatch = 1, frag = 0, start offset */
	TF_FORM_PKT_INFO_WORD1(142,0,0,PASAHO_HDR_UDP),     /* end offset, errIdx, portNum = 0, nextHdr = UDP */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),    	            /* L3 offset = 14  */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IPv6),
	                        0, 0),                      /* bitmap, pdspNum = 1, liIndex = 0 */
    TF_FORM_PKT_INFO_WORD4(0, 0, 0, 0, 1),              /* VC, pri, vlan Count = 0, greCount = 0, ipCount = 1 */
	TF_FORM_PKT_INFO_WORD5(0)
};
#else
static pasahoLongInfo_t pkt13Info = {

	TF_FORM_PKT_INFO_WORD0(0,24,622),		/* cmd len = 24, start offset = 622 (UDP Header) */
	TF_FORM_PKT_INFO_WORD1(142,0,1,0,0,0),  /* end offset */
	TF_FORM_PKT_INFO_WORD2(14,0,0,0),		/* L3 offset = 14, l4Offset = 0, l5Offset = 0, ahEspOffset = 0 */

	/* bitmap, next header = UDP, vlan count = 0, ip count = 1, gre count = 0, frag = 0, ip route options = 0, multi route = 0 */
	TF_FORM_PKT_INFO_WORD3((PASAHO_HDR_BITMASK_MAC | PASAHO_HDR_BITMASK_IP),PASAHO_HDR_UDP,0,1,0,0,0,0),
	TF_FORM_PKT_INFO_WORD4(0)
};
#endif


#define T11_SWINFO0_PKT_ID                 0xAAAA0000
#define T11_PKTBUF_SIZE                    3500

#ifdef _TMS320C6X
#pragma DATA_SECTION (t11MalFPktInfo, ".testPkts")
#endif
static pktTestInfo_t t11MalFPktInfo[] =  {
     /* Packet 13 */
	{
			(uint8_t *)pkt13,
			(pasahoLongInfo_t *)&pkt13Info,
			sizeof(pkt13),
			{
			  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
	      (1 << TF_STATS_BM_C1_NUM_PACKETS) |  (1 << TF_STATS_BM_C1_SILENT_DISCARD) | (1 << TF_STATS_BM_C1_NUM_IPV6), /* IP match */
			  0
			},																	  									/* no other match */
			0		            /* Packet will be discard */
	},
     /* Packet 12 */
	{
			(uint8_t *)pkt12,
			(pasahoLongInfo_t *)&pkt12Info,
			sizeof(pkt12),
			{
			  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
	      (1 << TF_STATS_BM_C1_NUM_PACKETS) |  (1 << TF_STATS_BM_C1_SILENT_DISCARD) | (1 << TF_STATS_BM_C1_NUM_IPV6), /* IP match */
			  0
			},																	  									/* no other match */
			0		            /* Packet will be discard */
	},	

     /* Packet 11 */
	{
			(uint8_t *)pkt11,
			(pasahoLongInfo_t *)&pkt11Info,
			sizeof(pkt11),
			{
			  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
	      (1 << TF_STATS_BM_C1_NUM_PACKETS) |  (1 << TF_STATS_BM_C1_SILENT_DISCARD) | (1 << TF_STATS_BM_C1_NUM_IPV6), /* IP match */
			  0
			},																	  									/* no other match */
			0		            /* Packet will be discard */
	},

     /* Packet 10 */
	{
			(uint8_t *)pkt10,
			(pasahoLongInfo_t *)&pkt10Info,
			sizeof(pkt10),
			{
			  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
	      (1 << TF_STATS_BM_C1_NUM_PACKETS) |  (1 << TF_STATS_BM_C1_SILENT_DISCARD) | (1 << TF_STATS_BM_C1_NUM_IPV6), /* IP match */
			  0
			},																	  									/* no other match */
			0		            /* Packet will be discard */
	},

     /* Packet 9 */
	{
			(uint8_t *)pkt9,
			(pasahoLongInfo_t *)&pkt9Info,
			sizeof(pkt9),
			{
			  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
	      (1 << TF_STATS_BM_C1_NUM_PACKETS) |  (1 << TF_STATS_BM_C1_SILENT_DISCARD) | (1 << TF_STATS_BM_C1_NUM_IPV6), /* IP match */
			  0
			},																	  									/* no other match */
			0		            /* Packet will be discard */
	},
	/* Packet 8 */
	{
		(uint8_t *)pkt8,
		(pasahoLongInfo_t *)&pkt8Info,
		sizeof(pkt8),
		{ 
		  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
      (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_SILENT_DISCARD) | (1 << TF_STATS_BM_C1_NUM_IPV6), /* IP match */
		  0 
		},																	  									/* no other match */
		0		            /* Packet will be discard */
	}
};


#ifdef _TMS320C6X
#pragma DATA_SECTION (t11PktInfo, ".testPkts")
#endif
static pktTestInfo_t t11PktInfo[] =  {

#ifndef SIMULATOR_SUPPORT
    /* Note: Disable those two test cases until the simulator bug is fixed */

	/* Packet 4 */
	{
		(uint8_t *)pkt4,
		(pasahoLongInfo_t *)&pkt4Info,
		sizeof(pkt4),
		{ (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
		  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH) | (1 << TF_STATS_BM_C1_NUM_IPV6),  	/* IP match */
		  (1 << TF_STATS_BM_C2_NUM_PACKETS) | (1 << TF_STATS_BM_C2_NUM_UDP) }, 								  		/* UDP match */
		  T11_SWINFO0_PKT_ID | 4		/* Packet will be matched by packet index 4 */
	},

	/* Packet 5 */
	{
		(uint8_t *)pkt5,
		(pasahoLongInfo_t *)&pkt5Info,
		sizeof(pkt5),
		{ (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
		  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH) | (1 << TF_STATS_BM_C1_NUM_IPV6),  	/* IP match */
		  (1 << TF_STATS_BM_C2_NUM_PACKETS) | (1 << TF_STATS_BM_C2_NUM_UDP) }, 								  		/* UDP match */
		T11_SWINFO0_PKT_ID | 5		/* Packet will be matched by packet index 4 */
	},

#endif

	/* Packet 6 */
	{
		(uint8_t *)pkt6,
		(pasahoLongInfo_t *)&pkt6Info,
		sizeof(pkt6),
		{ (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
		  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH) | (1 << TF_STATS_BM_C1_NUM_IPV6),  	/* IP match */
		  (1 << TF_STATS_BM_C2_NUM_PACKETS) | (1 << TF_STATS_BM_C2_NUM_UDP)     | (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH) | (1 << TF_STATS_BM_C1_NUM_IPV6)},	/* IP/UDP match */															  		/* UDP match */
		T11_SWINFO0_PKT_ID | 6		/* Packet will be matched by packet index 2 */
	},

	/* Packet 7 */
	{
		(uint8_t *)pkt7,
		(pasahoLongInfo_t *)&pkt7Info,
		sizeof(pkt7),
		{ (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH),  									/* MAC match */
		  (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH) | (1 << TF_STATS_BM_C1_NUM_IPV6),  	/* IP match */
		  (1 << TF_STATS_BM_C2_NUM_PACKETS) | (1 << TF_STATS_BM_C2_NUM_UDP)     | (1 << TF_STATS_BM_C1_NUM_PACKETS) | (1 << TF_STATS_BM_C1_TABLE_MATCH) | (1 << TF_STATS_BM_C1_NUM_IPV6)},	/* IP/UDP match */															  		/* UDP match */
		T11_SWINFO0_PKT_ID | 7		/* Packet will be matched by packet index 3 */
	},


};

#endif /*TEST11PKTS_H_*/
