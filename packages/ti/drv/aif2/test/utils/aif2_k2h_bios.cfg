/*
 *  Copyright 2009 by Texas Instruments Incorporated.
 *
 *  All rights reserved. Property of Texas Instruments Incorporated.
 *  Restricted rights to use, duplicate or disclose this code are
 *  granted through contract.
 *
 */

/* THIS FILE WAS GENERATED BY ti.sysbios.genx */

/*
 *  ======== aif2_test.cfg ========
 *
 */
 
environment['xdc.cfg.check.fatal'] = 'false';

var Program = xdc.useModule('xdc.cfg.Program');

/* define stack and heap sizes */
Program.stack = 0x20000;
Program.heap  = 0x20000;

var Task      = xdc.useModule('ti.sysbios.knl.Task');
var Semaphore = xdc.useModule('ti.sysbios.knl.Semaphore');
var Swi    	  = xdc.useModule('ti.sysbios.knl.Swi');
var Hwi       = xdc.useModule('ti.sysbios.family.c64p.Hwi');
var HeapMem = xdc.useModule('ti.sysbios.heaps.HeapMem');
var Memory  = xdc.useModule('xdc.runtime.Memory');

/* Modules needed to use EDMA3 LLD */ 
var ECM = xdc.useModule('ti.sysbios.family.c64p.EventCombiner');
xdc.useModule('ti.sysbios.family.c66.tci66xx.CpIntc');
xdc.useModule('ti.sysbios.hal.Cache');

var EDMA = xdc.loadPackage('ti.sdo.edma3.drv');

var System = xdc.useModule('xdc.runtime.System');
SysStd  = xdc.useModule('xdc.runtime.SysStd');
System.SupportProxy = SysStd;

var Startup = xdc.useModule('xdc.runtime.Startup');
Startup.firstFxns.$add('&dspProcIdConfig');

var name = "aif2test";

/* Load and use the CPPI, QMSS & CSL packages */
var devType = "k2h"
var cslSettings = xdc.useModule ('ti.csl.Settings');
cslSettings.deviceType = devType;

var Cppi = xdc.loadPackage('ti.drv.cppi'); 
var Qmss = xdc.loadPackage('ti.drv.qmss'); 
var Aif2 = xdc.loadPackage('ti.drv.aif2');
print(Program.platform.$name);
if (Program.platform.$name.match(/evmTCI6638/)) { 
	var Platform = xdc.loadPackage('ti.platforms.evmTCI6638K2K');
}	
/****** IPC - Shared Memory Settings ********/
/* IPC packages */
var Ipc                         =   xdc.useModule('ti.sdo.ipc.Ipc');
var Settings                    =   xdc.module('ti.sdo.ipc.family.Settings');
var ListMP                      =   xdc.useModule('ti.sdo.ipc.ListMP');
var GateMP                      =   xdc.useModule('ti.sdo.ipc.GateMP');
var SharedRegion                =   xdc.useModule('ti.sdo.ipc.SharedRegion');
var HeapMemMP                   =   xdc.useModule('ti.sdo.ipc.heaps.HeapMemMP');
var MultiProc                   =   xdc.useModule('ti.sdo.utils.MultiProc');

var memmap = Program.cpu.memoryMap;

/* Configure the shared memory heap for shared memory allocations required by the
* CPPI and QMSS Libraries */
//SharedRegion.translate = false;

/* Create a shared memory heap */
//MultiProc.setConfig(null, ["CORE0", "CORE1"]);
MultiProc.setConfig(null, ["CORE0", "CORE1", "CORE2", "CORE3", "CORE4", "CORE5", "CORE6", "CORE7"]);

/* Synchronize all processors (this will be done in Ipc_start) */
Ipc.procSync = Ipc.ProcSync_ALL;

/* To avoid wasting shared memory for Notify and MessageQ transports */
for (var i = 0; i < MultiProc.numProcessors; i++) {
    Ipc.setEntryMeta({
        remoteProcId: i,
        setupNotify: false,
        setupMessageQ: false,
    });
}

/* Create a shared memory */
SharedRegion.setEntryMeta(0,
    { base: 0x0C010000,
      len: 0x00100000,
      ownerProcId: 0,
      isValid: true,
      name: "sharemem",
    });


/*
 *  @(#) ti.sysbios.genx; 2, 0, 0, 0,275; 4-29-2009 15:45:06; /db/vtree/library/trees/avala/avala-k25x/src/
 */

