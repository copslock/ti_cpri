/*
 *
 * Copyright (C) 2010-2012 Texas Instruments Incorporated - http://www.ti.com/ 
 * 
 * 
 *  Redistribution and use in source and binary forms, with or without 
 *  modification, are permitted provided that the following conditions 
 *  are met:
 *
 *    Redistributions of source code must retain the above copyright 
 *    notice, this list of conditions and the following disclaimer.
 *
 *    Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the 
 *    documentation and/or other materials provided with the   
 *    distribution.
 *
 *    Neither the name of Texas Instruments Incorporated nor the names of
 *    its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT 
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 *  A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT 
 *  OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
 *  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT 
 *  LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 *  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 *  THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT 
 *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE 
 *  OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

var Edma 		= xdc.loadPackage ("ti.sdo.edma3.drv.sample");
var drv  		= xdc.loadPackage ("ti.sdo.edma3.drv");
var rm   		= xdc.loadPackage ("ti.sdo.edma3.rm");
var Memory              = xdc.useModule('xdc.runtime.Memory');
var BIOS                = xdc.useModule('ti.sysbios.BIOS');
var HeapMem             = xdc.useModule('ti.sysbios.heaps.HeapMem');
var HeapBuf             = xdc.useModule('ti.sysbios.heaps.HeapBuf');
var Log                 = xdc.useModule('xdc.runtime.Log');
var Task                = xdc.useModule('ti.sysbios.knl.Task');
var Semaphore           = xdc.useModule('ti.sysbios.knl.Semaphore');
var CpIntc              = xdc.useModule('ti.sysbios.family.c66.tci66xx.CpIntc');
var Hwi			= xdc.useModule('ti.sysbios.family.c64p.Hwi');
var ECM     		= xdc.useModule('ti.sysbios.family.c64p.EventCombiner');
var core      		= xdc.useModule('ti.sysbios.hal.Core');
var halCache  		= xdc.useModule('ti.sysbios.hal.Cache');

var System = xdc.useModule('xdc.runtime.System');
var hlink = xdc.useModule('ti.drv.hyplnk.Settings');
/* Use the CSL module and indicate that INTC library will be used. */
var devType = "c6678";
var Csl = xdc.useModule('ti.csl.Settings');
Csl.deviceType = devType;
Csl.useCSLIntcLib = true;

Program.sectMap[".text"]  = "MSMCSRAM";
Program.sectMap[".const"] = "MSMCSRAM";
Program.sectMap[".init_array"] = "L2SRAM";
Program.sectMap[".csl_vect"] = "L2SRAM";
Program.stack = 1024*4 + 0x400;

/* Create data sections for specific memory locations */
Program.sectMap[".bss:hyplnkData"] = new Program.SectionSpec();
Program.sectMap[".bss:hyplnkData"].loadAddress=0x830000;
Program.sectMap[".bss:testData"] = "L2SRAM";
Program.sectMap[".bss:QMSSData"] = new Program.SectionSpec();
Program.sectMap[".bss:QMSSData"].loadAddress=0x850000;
Program.sectMap[".bss:packetData"] = new Program.SectionSpec();
Program.sectMap[".bss:packetData"].loadAddress=0x870000;

/* Load and use the CSL, CPPI and QMSS packages */
var Cppi = xdc.loadPackage('ti.drv.cppi'); 
var Qmss = xdc.loadPackage('ti.drv.qmss'); 

